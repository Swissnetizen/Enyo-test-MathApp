{"ts":1349876438498,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"enyo.kind({\n//Defines important varibels    \n\tname: \"App\",\n\tfit: true,\n\tclasses:\"onyx\",\n\tn1: 0,\n\tn2: 0,\n    CorrectResult: 0,\n    ProblemType: 0,\n    ProblemTypeString: \"0\", \n    ProblemTypes: new Array(\"\", \"+\", \"-\", \"x\", \"/\"),\n    CorrectAnswers: 0,\n    MaxDecimals: 2,\n    \n\t\n\t\n\t\n//Comonents that are retrived from an other file\n\tcomponents: SumComponents,\n\t\n//When a key is pressed on the keyboard this is called\t\n\tAnswerKeyDown: function(inSender, inEvent) {\n\t    //If the enter key is pressed\n\t    if (inEvent.keyCode == 13){\n\t    this.SubmitFunc();\n\t    }\n\t    },\n\t //What happens if the user presses okay on the failpoup\n\tOkFailPopup: function() {\n\t    this.NewProblem();\n\t    this.$.FailPopup.hide()\n\t    //reset the correct answer to nothing\n\t    this.$.CorrectAnswer.content = \"\";\n\t},\n\t\n\t        \n\t//Sets a new problem\n\tNewProblem: function() {\n\t    this.n1 = Math.floor(Math.random() * 10+1);\n        this.n2 = Math.floor(Math.random() * 10+1);\n\t    this.ProblemType = Math.floor(Math.random() * 4+1);\n\t    this.$.Answer.hasNode().value = \"\";\n\t\n\t\n\t// figures out what type the problem is and does special actions according to that \n\t    switch(this.ProblemType) {\n           //Addition\n            case 1:\n                //Rounds the answer to 2 d.p.            \n\t            this.CorrectResult = RoundNumber(this.n1 + this.n2, this.MaxDecimals);\n\t            this.ProblemTypeString = \"+\";\n\t            break;\n            //Subtration\n            case 2:\n             //Rounds the answer to 2 d.p.       \n                this.CorrectResult = RoundNumber(this.n1 - this.n2, this.MaxDecimals);\n                this.ProblemTypeString = \"-\";\n                break;\n             //Multiplication\n            case 3: \n             //Rounds the answer to 2 d.p.       \n                this.CorrectResult = RoundNumber(this.n1 * this.n2, this.MaxDecimals);\n                this.ProblemTypeString = \"x\";\n                break;\n            //devision\n            case 4:\n             //Rounds the answer to 2 d.p.       \n                this.CorrectResult = RoundNumber(this.n1 / this.n2, this.MaxDecimals);\n                this.ProblemTypeString = \"/\";\n                break;\n        \n    }; \n    //Sets and renders the new problem\n        this.$.Problem.content = this.n1 + \" \" + this.ProblemTypeString + \" \" + this.n2 + \"=\";\n        this.$.Problem.render();\n    //Returns true to indicate everything went well\n\t\n\t    return true;   \n\t},\n\t// Is called when the user presse the submit button or the enter key\n\tSubmitFunc: function(inEvent, inSender) {\n\t    if (RoundNumber(this.$.Answer.hasNode().value, 2) == this.CorrectResult) {\n\t        this.NewProblem();\n        } else {\n            this.$.CorrectAnswer.content = \"The Correct Answer was: \" + this.CorrectResult;\n            this.$.CorrectAnswer.render();\n            this.$.FailPopup.show();\n            \n        }\n\t   \n\t        \n     \n\t},\n\t\n\t\n\t\n\n\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":2912}]],"length":2912}
